def generate_key(text, key):
    return (key * (len(text) // len(key) + 1))[:len(text)]

def vigenere(text, key, mode='encrypt'):
    key = generate_key(text, key)
    result = []
    
    for i, char in enumerate(text):
        if char.isalpha():
            shift = ord(key[i].upper()) - ord('A')
            base = ord('A') if char.isupper() else ord('a')
            if mode == 'encrypt':
                result.append(chr((ord(char) - base + shift) % 26 + base))
            elif mode == 'decrypt':
                result.append(chr((ord(char) - base - shift) % 26 + base))
        else:
            result.append(char)
    
    return ''.join(result)

# Example usage:
plain_text = "HELLO WORLD"
key = "KEY"
cipher_text = vigenere(plain_text, key, mode='encrypt')
decrypted_text = vigenere(cipher_text, key, mode='decrypt')

print(f"Plaintext: {plain_text}")
print(f"Key: {key}")
print(f"Encrypted: {cipher_text}")
print(f"Decrypted: {decrypted_text}")
